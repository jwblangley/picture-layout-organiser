{"ast":null,"code":"import axios from 'axios';\nconst HTTP_OK = 200;\nexport function getFormattedAddress(backendAddress) {\n  if (!backendAddress.toLowerCase().startsWith('http://') && !backendAddress.toLowerCase().startsWith('https://')) {\n    return 'http://' + backendAddress;\n  } else if (backendAddress.toLowerCase().startsWith('https://')) {\n    return 'http://' + backendAddress.substring(8, backendAddress.length);\n  } else {\n    return backendAddress;\n  }\n}\nexport function listUsers(backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/listUsers';\n  axios.get(query_url).then(res => res.data).then(callback);\n}\nexport function getUserContent(username, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/getUserContent';\n  axios.get(query_url).then(res => res.data).then(callback);\n}\nexport function saveUserContent(username, content, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/saveUserContent';\n  axios.post(query_url, {\n    'content': content\n  }).then(callback);\n}\nexport function createAccount(newName, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/createAccount';\n  axios.post(query_url, {\n    'name': newName\n  }).then(callback);\n}\nexport function deleteAccount(username, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/deleteAccount';\n  axios.post(query_url, {\n    'name': username\n  }).then(callback);\n}\nexport function uploadUserMedia(files, username, backendAddress, progressCallback, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/addUserMedia';\n  const formData = new FormData();\n\n  for (var i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n  }\n\n  axios.post(query_url, formData, {\n    onUploadProgress: progressCallback\n  }).then(res => ({\n    'ok': res.status === HTTP_OK,\n    'text': res.data\n  })).then(callback);\n}\nexport function uploadUserGallery(files, username, backendAddress, progressCallback, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/addUserGallery';\n  const formData = new FormData();\n\n  for (var i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n  }\n\n  axios.post(query_url, formData, {\n    onUploadProgress: progressCallback\n  }).then(res => ({\n    'ok': res.status === HTTP_OK,\n    'text': res.data\n  })).then(callback);\n}","map":{"version":3,"sources":["/home/james/Documents/picture-layout-organiser/frontend/src/adapters/ManagerAdapter.js"],"names":["axios","HTTP_OK","getFormattedAddress","backendAddress","toLowerCase","startsWith","substring","length","listUsers","callback","query_url","get","then","res","data","getUserContent","username","saveUserContent","content","post","createAccount","newName","deleteAccount","uploadUserMedia","files","progressCallback","formData","FormData","i","append","onUploadProgress","status","uploadUserGallery"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst HTTP_OK = 200;\n\nexport function getFormattedAddress(backendAddress) {\n  if (!backendAddress.toLowerCase().startsWith('http://')\n    && !backendAddress.toLowerCase().startsWith('https://')) {\n    return 'http://' + backendAddress;\n  } else if (backendAddress.toLowerCase().startsWith('https://')) {\n    return 'http://' + backendAddress.substring(8, backendAddress.length);\n  } else {\n    return backendAddress;\n  }\n}\n\nexport function listUsers(backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/listUsers';\n  axios.get(query_url)\n  .then(res => res.data)\n  .then(callback);\n}\n\nexport function getUserContent(username, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/getUserContent';\n  axios.get(query_url)\n  .then(res => res.data)\n  .then(callback);\n}\n\nexport function saveUserContent(username, content, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/saveUserContent';\n  axios.post(query_url, {\n    'content': content\n  })\n  .then(callback);\n}\n\nexport function createAccount(newName, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/createAccount';\n  axios.post(query_url, {\n    'name': newName\n  })\n  .then(callback);\n}\n\nexport function deleteAccount(username, backendAddress, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/deleteAccount';\n  axios.post(query_url, {\n    'name': username\n  })\n  .then(callback);\n}\n\nexport function uploadUserMedia(files, username, backendAddress, progressCallback, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/addUserMedia';\n  const formData = new FormData();\n  for (var i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n  }\n\n  axios.post(query_url, formData, {\n       onUploadProgress: progressCallback,\n     })\n  .then(res => ({'ok': res.status === HTTP_OK, 'text': res.data}))\n  .then(callback);\n}\n\nexport function uploadUserGallery(files, username, backendAddress, progressCallback, callback) {\n  const query_url = getFormattedAddress(backendAddress) + '/' + username + '/addUserGallery';\n  const formData = new FormData();\n  for (var i = 0; i < files.length; i++) {\n    formData.append('file', files[i]);\n  }\n\n  axios.post(query_url, formData, {\n       onUploadProgress: progressCallback,\n     })\n  .then(res => ({'ok': res.status === HTTP_OK, 'text': res.data}))\n  .then(callback);\n}\n"]},"metadata":{},"sourceType":"module"}