{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/picture-layout-organiser/frontend/src/components/editPage/EditPage.js\";\nimport React, { Component } from 'react';\nimport './EditPage.css';\nimport Carousel from '../carousel/Carousel.js';\nimport crossImage from \"../../images/cross.svg\";\nimport binImage from \"../../images/bin.svg\";\n\nclass EditPage extends Component {\n  // TODO: Implement ability to set gallery head\n  constructor(props) {\n    super(props);\n    this.state = {\n      'text': props.text\n    };\n  }\n\n  generateMediaPreview(media, mediaType) {\n    if (mediaType === 'video') {\n      return React.createElement(\"video\", {\n        className: \"video-preview\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: media,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"Your browser does not support the video tag.\");\n    } else if (mediaType === 'gallery') {\n      return React.createElement(Carousel, {\n        stringIfEmpty: \"Empty Gallery\",\n        slides: media.map((galleryItem, index) => {\n          var mediaPreview = this.generateMediaPreview(galleryItem.media, galleryItem.mediaType);\n          return this.generateGalleryItemWrapper(mediaPreview, index);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    } else if (mediaType === 'image') {\n      // Standard image\n      var backgroundImageStyle = {\n        'backgroundImage': 'url(' + media + ')'\n      };\n      return React.createElement(\"div\", {\n        style: backgroundImageStyle,\n        className: \"image-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n\n    throw new Error(\"Unknown media type\");\n  }\n\n  generateGalleryItemWrapper(itemPreview, itemIndex) {\n    return React.createElement(\"div\", {\n      className: \"gallery-item-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, itemIndex === 0 && React.createElement(\"a\", {\n      id: \"gallery-preview-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), itemPreview, itemIndex > 0 && React.createElement(\"button\", {\n      onClick: () => this.props.setGalleryItemAsGalleryHead(itemIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Make first\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"edit-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: crossImage,\n      alt: \"close\",\n      className: \"exit-icon\",\n      onClick: () => this.props.closePage(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.generateMediaPreview(this.props.media, this.props.mediaType), React.createElement(\"img\", {\n      src: binImage,\n      alt: \"delete item\",\n      className: \"media-delete-icon\",\n      onClick: this.props.deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"caption-input-area\",\n      placeholder: \"Enter a caption\",\n      value: this.state.text,\n      onChange: e => this.setState({\n        'text': e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"save-caption-button\",\n      onClick: () => this.props.saveCaption(this.state.text),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}\n\nexport default EditPage;","map":{"version":3,"sources":["/home/james/Documents/picture-layout-organiser/frontend/src/components/editPage/EditPage.js"],"names":["React","Component","Carousel","EditPage","constructor","props","state","text","generateMediaPreview","media","mediaType","map","galleryItem","index","mediaPreview","generateGalleryItemWrapper","backgroundImageStyle","Error","itemPreview","itemIndex","setGalleryItemAsGalleryHead","render","crossImage","closePage","binImage","deleteImage","e","setState","target","value","saveCaption"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport './EditPage.css';\n\nimport Carousel from '../carousel/Carousel.js';\n\nimport crossImage from '../../images/cross.svg'\nimport binImage from '../../images/bin.svg'\n\nclass EditPage extends Component {\n\n  // TODO: Implement ability to set gallery head\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      'text': props.text\n    }\n  }\n\n  generateMediaPreview(media, mediaType) {\n    if (mediaType === 'video') {\n      return (\n        <video className=\"video-preview\" controls>\n          <source src={media} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n      );\n    } else if (mediaType === 'gallery') {\n      return (\n        <Carousel\n          stringIfEmpty=\"Empty Gallery\"\n          slides={media.map((galleryItem, index) => {\n            var mediaPreview = this.generateMediaPreview(galleryItem.media, galleryItem.mediaType)\n            return this.generateGalleryItemWrapper(mediaPreview, index);\n            }\n          )}\n\n        />\n      );\n    } else if (mediaType === 'image') {\n      // Standard image\n      var backgroundImageStyle = {\n        'backgroundImage': 'url(' + media + ')'\n      }\n      return (\n        <div\n          style={backgroundImageStyle}\n          className='image-preview'\n        ></div>\n      );\n    }\n    throw new Error(\"Unknown media type\");\n  }\n\n  generateGalleryItemWrapper(itemPreview, itemIndex) {\n    return (\n      <div className='gallery-item-wrapper'>\n        {\n          itemIndex === 0 &&\n          (\n            <a id='gallery-preview-head' />\n          )\n        }\n        {itemPreview}\n        {\n          itemIndex > 0 &&\n          (\n            <button\n              onClick={() => this.props.setGalleryItemAsGalleryHead(itemIndex)}\n            >\n              Make first\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n\n    return (\n      <div className='edit-page'>\n        <img\n          src={crossImage}\n          alt='close'\n          className='exit-icon'\n          onClick={() => this.props.closePage()}\n        />\n        {this.generateMediaPreview(this.props.media, this.props.mediaType)}\n        <img\n          src={binImage}\n          alt='delete item'\n          className='media-delete-icon'\n          onClick={this.props.deleteImage}\n        />\n        <textarea\n          className={\"caption-input-area\"}\n          placeholder={\"Enter a caption\"}\n          value={this.state.text}\n          onChange={(e) => this.setState({'text': e.target.value})}\n        />\n        <button\n          id='save-caption-button'\n          onClick={() => this.props.saveCaption(this.state.text)}\n        >\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditPage;\n"]},"metadata":{},"sourceType":"module"}