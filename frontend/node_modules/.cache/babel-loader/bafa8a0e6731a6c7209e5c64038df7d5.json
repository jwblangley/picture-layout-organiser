{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/picture-layout-organiser/frontend/src/components/imageSquare/ImageSquare.js\";\nimport React, { Component } from 'react';\nimport './ImageSquare.css';\nimport ringCircle from \"../../images/ring-circle.svg\";\nimport padlock from \"../../images/padlock.svg\";\nimport pencil from \"../../images/pencil.svg\";\nimport captioned from \"../../images/captioned.svg\";\nimport videoIcon from \"../../images/video.svg\";\nimport galleryIcon from \"../../images/gallery.svg\";\n\nclass ImageSquare extends Component {\n  generateBackgroundImageStyle(media, mediaType, thumbnail) {\n    // Decide backround image for ImageSquare\n    if (mediaType === 'video') {\n      return {\n        'backgroundImage': 'url(' + thumbnail + ')'\n      };\n    } else if (mediaType === 'gallery') {\n      var galleryHead = media[0];\n      return this.generateBackgroundImageStyle(galleryHead.media, galleryHead.mediaType, galleryHead.thumbnail);\n    } else if (mediaType === 'image') {\n      // Standard image\n      return {\n        'backgroundImage': 'url(' + media + ')'\n      };\n    }\n\n    throw new Error(\"Unknown media type\");\n  }\n\n  render() {\n    var backgroundImageStyle = this.generateBackgroundImageStyle(this.props.media, this.props.mediaType, this.props.thumbnail);\n    var classString = 'image-square' + (this.props.selected ? ' selected' : '');\n    return React.createElement(\"div\", {\n      className: classString,\n      style: backgroundImageStyle,\n      onClick: this.props.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.selected && React.createElement(\"a\", {\n      id: \"current-selected-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.props.locked ? padlock : ringCircle,\n      alt: this.props.locked ? 'locked' : 'unlocked',\n      className: \"lock-ring clickable icon\",\n      onClick: this.props.toggleLock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.props.locked ? null : React.createElement(\"img\", {\n      src: pencil,\n      alt: \"edit\",\n      className: \"edit-icon clickable icon\",\n      onClick: this.props.handleEditClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), this.props.captioned && !this.props.locked && React.createElement(\"img\", {\n      src: captioned,\n      alt: \"captioned\",\n      className: \"captioned-icon icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), this.props.mediaType !== 'image' && !this.props.locked && React.createElement(\"img\", {\n      src: this.props.mediaType === 'video' ? videoIcon : galleryIcon,\n      alt: this.props.mediaType,\n      className: \"media-type-icon icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageSquare;","map":{"version":3,"sources":["/home/james/Documents/picture-layout-organiser/frontend/src/components/imageSquare/ImageSquare.js"],"names":["React","Component","ImageSquare","generateBackgroundImageStyle","media","mediaType","thumbnail","galleryHead","Error","render","backgroundImageStyle","props","classString","selected","handleClick","locked","padlock","ringCircle","toggleLock","pencil","handleEditClick","captioned","videoIcon","galleryIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;;;;;;;;AASA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAElCE,EAAAA,4BAA4B,CAACC,KAAD,EAAQC,SAAR,EAAmBC,SAAnB,EAA8B;AACxD;AACA,QAAID,SAAS,KAAK,OAAlB,EAA0B;AACxB,aAAO;AACL,2BAAmB,SAASC,SAAT,GAAqB;AADnC,OAAP;AAGD,KAJD,MAIO,IAAID,SAAS,KAAK,SAAlB,EAA6B;AAClC,UAAIE,WAAW,GAAGH,KAAK,CAAC,CAAD,CAAvB;AACA,aAAO,KAAKD,4BAAL,CAAkCI,WAAW,CAACH,KAA9C,EAAqDG,WAAW,CAACF,SAAjE,EAA4EE,WAAW,CAACD,SAAxF,CAAP;AACD,KAHM,MAGA,IAAID,SAAS,KAAK,OAAlB,EAA2B;AAChC;AACA,aAAO;AACL,2BAAmB,SAASD,KAAT,GAAiB;AAD/B,OAAP;AAGD;;AACD,UAAM,IAAII,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,oBAAoB,GAAG,KAAKP,4BAAL,CAAkC,KAAKQ,KAAL,CAAWP,KAA7C,EAAoD,KAAKO,KAAL,CAAWN,SAA/D,EAA0E,KAAKM,KAAL,CAAWL,SAArF,CAA3B;AAEA,QAAIM,WAAW,GAAG,kBAAkB,KAAKD,KAAL,CAAWE,QAAX,GAAsB,WAAtB,GAAoC,EAAtD,CAAlB;AAEA,WACE;AACE,MAAA,SAAS,EAAED,WADb;AAEE,MAAA,KAAK,EAAEF,oBAFT;AAGE,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,KAAKH,KAAL,CAAWE,QAAX,IAEE;AAAG,MAAA,EAAE,EAAC,uBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARN,EAWE;AACE,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWI,MAAX,GAAoBC,OAApB,GAA8BC,UADrC;AAEE,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWI,MAAX,GAAoB,QAApB,GAA8B,UAFrC;AAGE,MAAA,SAAS,EAAC,0BAHZ;AAIE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWO,UAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAiBG,KAAKP,KAAL,CAAWI,MAAX,GAAoB,IAApB,GACE;AACC,MAAA,GAAG,EAAEI,MADN;AAEC,MAAA,GAAG,EAAC,MAFL;AAGC,MAAA,SAAS,EAAC,0BAHX;AAIC,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,eAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBL,EAyBG,KAAKT,KAAL,CAAWU,SAAX,IAAwB,CAAC,KAAKV,KAAL,CAAWI,MAApC,IACE;AACC,MAAA,GAAG,EAAEM,SADN;AAEC,MAAA,GAAG,EAAC,WAFL;AAGC,MAAA,SAAS,EAAC,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BL,EAgCG,KAAKV,KAAL,CAAWN,SAAX,KAAyB,OAAzB,IAAoC,CAAC,KAAKM,KAAL,CAAWI,MAAhD,IACE;AACC,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWN,SAAX,KAAyB,OAAzB,GAAmCiB,SAAnC,GAA8CC,WADpD;AAEC,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWN,SAFjB;AAGC,MAAA,SAAS,EAAC,sBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCL,CADF;AA0CD;;AApEiC;;AAuEpC,eAAeH,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport './ImageSquare.css';\n\nimport ringCircle from '../../images/ring-circle.svg';\nimport padlock from '../../images/padlock.svg';\nimport pencil from '../../images/pencil.svg';\nimport captioned from '../../images/captioned.svg';\nimport videoIcon from '../../images/video.svg';\nimport galleryIcon from '../../images/gallery.svg';\n\nclass ImageSquare extends Component {\n\n  generateBackgroundImageStyle(media, mediaType, thumbnail) {\n    // Decide backround image for ImageSquare\n    if (mediaType === 'video'){\n      return {\n        'backgroundImage': 'url(' + thumbnail + ')'\n      }\n    } else if (mediaType === 'gallery') {\n      var galleryHead = media[0];\n      return this.generateBackgroundImageStyle(galleryHead.media, galleryHead.mediaType, galleryHead.thumbnail);\n    } else if (mediaType === 'image') {\n      // Standard image\n      return {\n        'backgroundImage': 'url(' + media + ')'\n      }\n    }\n    throw new Error(\"Unknown media type\");\n  }\n\n  render() {\n\n    var backgroundImageStyle = this.generateBackgroundImageStyle(this.props.media, this.props.mediaType, this.props.thumbnail);\n\n    var classString = 'image-square' + (this.props.selected ? ' selected' : '');\n\n    return (\n      <div\n        className={classString}\n        style={backgroundImageStyle}\n        onClick={this.props.handleClick}\n        >\n        {\n          this.props.selected &&\n          (\n            <a id='current-selected-item' />\n          )\n        }\n        <img\n          src={this.props.locked ? padlock : ringCircle}\n          alt={this.props.locked ? 'locked': 'unlocked'}\n          className='lock-ring clickable icon'\n          onClick={this.props.toggleLock}\n        />\n        {this.props.locked ? null :\n          (<img\n            src={pencil}\n            alt='edit'\n            className='edit-icon clickable icon'\n            onClick={this.props.handleEditClick}\n          />)\n        }\n        {this.props.captioned && !this.props.locked &&\n          (<img\n            src={captioned}\n            alt='captioned'\n            className='captioned-icon icon'\n          />)\n        }\n        {this.props.mediaType !== 'image' && !this.props.locked &&\n          (<img\n            src={this.props.mediaType === 'video' ? videoIcon: galleryIcon}\n            alt={this.props.mediaType}\n            className='media-type-icon icon'\n          />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default ImageSquare;\n"]},"metadata":{},"sourceType":"module"}